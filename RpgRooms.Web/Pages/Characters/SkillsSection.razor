@using RpgRooms.Core.Domain.Entities
<div class="rpg-section">
  <h4>Per√≠cias</h4>
  @foreach (var skill in skills)
  {
      var proficient = Character.SkillProficiencies.Any(p => p.Name == skill.Name);
      <div>
          @if(!IsReadOnly)
          {
              <input type="checkbox" checked="@proficient" @onchange="e => Toggle(skill.Name, (bool)e.Value)" />
          }
          <span>@skill.Display (@Character.GetSkillValue(skill.Name))</span>
      </div>
  }
</div>

@code {
  [Parameter] public Character Character { get; set; } = default!;
  [Parameter] public bool IsReadOnly { get; set; }

  record Skill(string Name, string Display);
  Skill[] skills = new[] {
      new Skill("Acrobatics","Acrobatics (DEX)"),
      new Skill("Animal Handling","Animal Handling (WIS)"),
      new Skill("Arcana","Arcana (INT)"),
      new Skill("Athletics","Athletics (STR)"),
      new Skill("Deception","Deception (CHA)"),
      new Skill("History","History (INT)"),
      new Skill("Insight","Insight (WIS)"),
      new Skill("Intimidation","Intimidation (CHA)"),
      new Skill("Investigation","Investigation (INT)"),
      new Skill("Medicine","Medicine (WIS)"),
      new Skill("Nature","Nature (INT)"),
      new Skill("Perception","Perception (WIS)"),
      new Skill("Performance","Performance (CHA)"),
      new Skill("Persuasion","Persuasion (CHA)"),
      new Skill("Religion","Religion (INT)"),
      new Skill("Sleight of Hand","Sleight of Hand (DEX)"),
      new Skill("Stealth","Stealth (DEX)"),
      new Skill("Survival","Survival (WIS)")
  };
  void Toggle(string name, bool value)
  {
      var prof = Character.SkillProficiencies.FirstOrDefault(p => p.Name == name);
      if (value && prof == null) Character.SkillProficiencies.Add(new SkillProficiency { Name = name });
      if (!value && prof != null) Character.SkillProficiencies.Remove(prof);
  }
}
