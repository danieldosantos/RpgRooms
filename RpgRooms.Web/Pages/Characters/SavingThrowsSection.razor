@using RpgRooms.Core.Domain.Entities
<div class="rpg-section">
  <h4>Testes de Resistência</h4>
  @foreach (var ability in abilities)
  {
      var proficient = Character.SavingThrowProficiencies.Any(p => p.Name == ability.Key);
      <div>
          @if(!IsReadOnly)
          {
              <input type="checkbox" checked="@proficient" @onchange="e => Toggle(ability.Key, (bool)e.Value)" />
          }
          <span>@ability.Display (@Character.GetSavingThrow(ability.Key))</span>
      </div>
  }
</div>

@code {
  [Parameter] public Character Character { get; set; } = default!;
  [Parameter] public bool IsReadOnly { get; set; }

  record Ability(string Key, string Display);
  Ability[] abilities = new[] {
     new Ability("Str","Força"),
     new Ability("Dex","Destreza"),
     new Ability("Con","Constituição"),
     new Ability("Int","Inteligência"),
     new Ability("Wis","Sabedoria"),
     new Ability("Cha","Carisma")
  };

  void Toggle(string key, bool value)
  {
     var prof = Character.SavingThrowProficiencies.FirstOrDefault(p => p.Name == key);
     if (value && prof == null) Character.SavingThrowProficiencies.Add(new SavingThrowProficiency { Name = key });
     if (!value && prof != null) Character.SavingThrowProficiencies.Remove(prof);
  }
}
